{"version":3,"file":"input.js","sourceRoot":"","sources":["input.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  forwardRef,\n  Component,\n  HostBinding,\n  Input,\n  Directive,\n  AfterContentInit,\n  ContentChild,\n  SimpleChange,\n  ContentChildren,\n  ViewChild,\n  ElementRef,\n  Renderer,\n  QueryList,\n  OnChanges,\n  EventEmitter,\n  Output,\n  NgModule,\n  ModuleWithProviders,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MdError, coerceBooleanProperty} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {MdTextareaAutosize} from './autosize';\n\n\nconst noop = () => {};\n\n\nexport const MD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdInput),\n  multi: true\n};\n\n// Invalid input type. Using one of these will throw an MdInputUnsupportedTypeError.\nconst MD_INPUT_INVALID_INPUT_TYPE = [\n  'file',\n  'radio',\n  'checkbox',\n];\n\n\nlet nextUniqueId = 0;\n\n\nexport class MdInputPlaceholderConflictError extends MdError {\n  constructor() {\n    super('Placeholder attribute and child element were both specified.');\n  }\n}\n\nexport class MdInputUnsupportedTypeError extends MdError {\n  constructor(type: string) {\n    super(`Input type \"${type}\" isn't supported by md-input.`);\n  }\n}\n\nexport class MdInputDuplicatedHintError extends MdError {\n  constructor(align: string) {\n    super(`A hint was already declared for 'align=\"${align}\"'.`);\n  }\n}\n\n\n\n/**\n * The placeholder directive. The content can declare this to implement more\n * complex placeholders.\n */\n@Directive({\n  selector: 'md-placeholder'\n})\nexport class MdPlaceholder {}\n\n\n/** The hint directive, used to tag content as hint labels (going under the input). */\n@Directive({\n  selector: 'md-hint',\n  host: {\n    '[class.md-right]': 'align == \"end\"',\n    '[class.md-hint]': 'true'\n  }\n})\nexport class MdHint {\n  // Whether to align the hint label at the start or end of the line.\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Component that represents a text input. It encapsulates the <input> HTMLElement and\n * improve on its behaviour, along with styling it according to the Material Design.\n */\n@Component({\n  selector: 'md-input, md-textarea',\n  template: require('./input.html'),\n  styles: [require('./input.css').toString()],\n  providers: [MD_INPUT_CONTROL_VALUE_ACCESSOR],\n  host: {'(click)' : 'focus()'},\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MdInput implements ControlValueAccessor, AfterContentInit, OnChanges {\n  private _focused: boolean = false;\n  private _value: any = '';\n\n  /** Callback registered via registerOnTouched (ControlValueAccessor) */\n  private _onTouchedCallback: () => void = noop;\n  /** Callback registered via registerOnChange (ControlValueAccessor) */\n  private _onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Aria related inputs.\n   */\n  @Input('aria-label') ariaLabel: string;\n  @Input('aria-labelledby') ariaLabelledBy: string;\n\n  private _ariaDisabled: boolean;\n  private _ariaRequired: boolean;\n  private _ariaInvalid: boolean;\n\n  @Input('aria-disabled')\n  get ariaDisabled(): boolean { return this._ariaDisabled; }\n  set ariaDisabled(value) { this._ariaDisabled = coerceBooleanProperty(value); }\n\n  @Input('aria-required')\n  get ariaRequired(): boolean { return this._ariaRequired; }\n  set ariaRequired(value) { this._ariaRequired = coerceBooleanProperty(value); }\n\n  @Input('aria-invalid')\n  get ariaInvalid(): boolean { return this._ariaInvalid; }\n  set ariaInvalid(value) { this._ariaInvalid = coerceBooleanProperty(value); }\n\n  /**\n   * Content directives.\n   */\n  @ContentChild(MdPlaceholder) _placeholderChild: MdPlaceholder;\n  @ContentChildren(MdHint) _hintChildren: QueryList<MdHint>;\n\n  /** Readonly properties. */\n  get focused() { return this._focused; }\n  get empty() { return (this._value == null || this._value === '') && this.type !== 'date'; }\n  get characterCount(): number {\n    return this.empty ? 0 : ('' + this._value).length;\n  }\n  get inputId(): string { return `${this.id}-input`; }\n\n  /**\n   * Bindings.\n   */\n  @Input() align: 'start' | 'end' = 'start';\n  @Input() dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\n  @Input() hintLabel: string = '';\n\n  @Input() autocomplete: string;\n  @Input() autocorrect: string;\n  @Input() autocapitalize: string;\n  @Input() id: string = `md-input-${nextUniqueId++}`;\n  @Input() list: string = null;\n  @Input() max: string | number = null;\n  @Input() maxlength: number = null;\n  @Input() min: string | number = null;\n  @Input() minlength: number = null;\n  @Input() placeholder: string = null;\n  @Input() step: number = null;\n  @Input() tabindex: number = null;\n  @Input() type: string = 'text';\n  @Input() name: string = null;\n\n  // textarea-specific\n  @Input() rows: number = null;\n  @Input() cols: number = null;\n  @Input() wrap: 'soft' | 'hard' = null;\n\n  private _floatingPlaceholder: boolean = true;\n  private _autofocus: boolean = false;\n  private _disabled: boolean = false;\n  private _readonly: boolean = false;\n  private _required: boolean = false;\n  private _spellcheck: boolean = false;\n\n  @Input()\n  get floatingPlaceholder(): boolean { return this._floatingPlaceholder; }\n  set floatingPlaceholder(value) { this._floatingPlaceholder = coerceBooleanProperty(value); }\n\n  @Input()\n  get autofocus(): boolean { return this._autofocus; }\n  set autofocus(value) { this._autofocus = coerceBooleanProperty(value); }\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n\n  @Input()\n  get readonly(): boolean { return this._readonly; }\n  set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  @Input()\n  get spellcheck(): boolean { return this._spellcheck; }\n  set spellcheck(value) { this._spellcheck = coerceBooleanProperty(value); }\n\n\n  private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  @Output('blur')\n  get onBlur(): Observable<FocusEvent> {\n    return this._blurEmitter.asObservable();\n  }\n\n  @Output('focus')\n  get onFocus(): Observable<FocusEvent> {\n    return this._focusEmitter.asObservable();\n  }\n\n  get value(): any { return this._value; };\n  @Input() set value(v: any) {\n    v = this._convertValueForInputType(v);\n    if (v !== this._value) {\n      this._value = v;\n      this._onChangeCallback(v);\n    }\n  }\n\n  // This is to remove the `align` property of the `md-input` itself. Otherwise HTML5\n  // might place it as RTL when we don't want to. We still want to use `align` as an\n  // Input though, so we use HostBinding.\n  @HostBinding('attr.align') get _align(): any { return null; }\n\n\n  @ViewChild('input') _inputElement: ElementRef;\n\n  _elementType: 'input' | 'textarea';\n\n  constructor(elementRef: ElementRef, private _renderer: Renderer) {\n    // Set the element type depending on normalized selector used(md-input / md-textarea)\n    this._elementType = elementRef.nativeElement.nodeName.toLowerCase() === 'md-input' ?\n        'input' :\n        'textarea';\n  }\n\n  /** Set focus on input */\n  focus() {\n    this._renderer.invokeElementMethod(this._inputElement.nativeElement, 'focus');\n  }\n\n  _handleFocus(event: FocusEvent) {\n    this._focused = true;\n    this._focusEmitter.emit(event);\n  }\n\n  _handleBlur(event: FocusEvent) {\n    this._focused = false;\n    this._onTouchedCallback();\n    this._blurEmitter.emit(event);\n  }\n\n  _handleChange(event: Event) {\n    this.value = (<HTMLInputElement>event.target).value;\n    this._onTouchedCallback();\n  }\n\n  _hasPlaceholder(): boolean {\n    return !!this.placeholder || this._placeholderChild != null;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  writeValue(value: any) {\n    this._value = value;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  registerOnChange(fn: any) {\n    this._onChangeCallback = fn;\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * TODO: internal\n   */\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  /**\n   * Implemented as a part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /** TODO: internal */\n  ngAfterContentInit() {\n    this._validateConstraints();\n\n    // Trigger validation when the hint children change.\n    this._hintChildren.changes.subscribe(() => {\n      this._validateConstraints();\n    });\n  }\n\n  /** TODO: internal */\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    this._validateConstraints();\n  }\n\n  /**\n   * Convert the value passed in to a value that is expected from the type of the md-input.\n   * This is normally performed by the *_VALUE_ACCESSOR in forms, but since the type is bound\n   * on our internal input it won't work locally.\n   * @private\n   */\n  private _convertValueForInputType(v: any): any {\n    switch (this.type) {\n      case 'number': return parseFloat(v);\n      default: return v;\n    }\n  }\n\n  /**\n   * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\n   * Constraints for now:\n   *   - placeholder attribute and <md-placeholder> are mutually exclusive.\n   *   - type attribute is not one of the forbidden types (see constant at the top).\n   *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\n   *     considered as align=\"start\".\n   * @private\n   */\n  private _validateConstraints() {\n    if (this.placeholder != '' && this.placeholder != null && this._placeholderChild != null) {\n      throw new MdInputPlaceholderConflictError();\n    }\n    if (MD_INPUT_INVALID_INPUT_TYPE.indexOf(this.type) != -1) {\n      throw new MdInputUnsupportedTypeError(this.type);\n    }\n\n    if (this._hintChildren) {\n      // Validate the hint labels.\n      let startHint: MdHint = null;\n      let endHint: MdHint = null;\n      this._hintChildren.forEach((hint: MdHint) => {\n        if (hint.align == 'start') {\n          if (startHint || this.hintLabel) {\n            throw new MdInputDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align == 'end') {\n          if (endHint) {\n            throw new MdInputDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n}\n\n\n@NgModule({\n  declarations: [MdPlaceholder, MdInput, MdHint, MdTextareaAutosize],\n  imports: [CommonModule, FormsModule],\n  exports: [MdPlaceholder, MdInput, MdHint, MdTextareaAutosize],\n})\nexport class MdInputModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdInputModule,\n      providers: []\n    };\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}