{"version":3,"file":"overlay-position-builder.js","sourceRoot":"","sources":["overlay-position-builder.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,mDAA+C;AAC/C,6EAAwE;AACxE,sCAAqD;AACrD,uEAAkE;AAKlE,6CAA6C;AAE7C,IAAa,sBAAsB;IACjC,gCAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IAAI,CAAC;IAEtD,0CAA0C;IAC1C,uCAAM,GAAN;QACE,MAAM,CAAC,IAAI,iDAAsB,EAAE,CAAC;IACtC,CAAC;IAED,4CAA4C;IAC5C,4CAAW,GAAX,UACI,UAAsB,EACtB,SAAmC,EACnC,UAAqC;QACvC,MAAM,CAAC,IAAI,uDAAyB,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/F,CAAC;IACH,6BAAC;AAAD,CAAC,AAfD,IAeC;AAfY,sBAAsB;IADlC,iBAAU,EAAE;qCAEyB,8BAAa;GADtC,sBAAsB,CAelC;AAfY,wDAAsB","sourcesContent":["import {ViewportRuler} from './viewport-ruler';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {ElementRef, Injectable} from '@angular/core';\nimport {GlobalPositionStrategy} from './global-position-strategy';\nimport {OverlayConnectionPosition, OriginConnectionPosition} from './connected-position';\n\n\n\n/** Builder for overlay position strategy. */\n@Injectable()\nexport class OverlayPositionBuilder {\n  constructor(private _viewportRuler: ViewportRuler) { }\n\n  /** Creates a global position strategy. */\n  global() {\n    return new GlobalPositionStrategy();\n  }\n\n  /** Creates a relative position strategy. */\n  connectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition) {\n    return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}