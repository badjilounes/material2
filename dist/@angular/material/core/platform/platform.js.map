{"version":3,"file":"platform.js","sourceRoot":"","sources":["platform.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAwE;AAIxE,4EAA4E;AAC5E,mDAAmD;AACnD,IAAM,kBAAkB,GAAG,CAAC,MAAM,CAAC,IAAI,IAAK,MAAM,CAAC,IAAY,CAAC,eAAe,CAAC,CAAC;AAEjF;;;GAGG;AAEH,IAAa,UAAU;IADvB;QAGE,qBAAqB;QACrB,SAAI,GAAG,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC3C,YAAO,GAAG,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAEtD,wFAAwF;QACxF,UAAK,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAExF,+EAA+E;QAC/E,6EAA6E;QAC7E,WAAM,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAEhG,kCAAkC;QAClC,QAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAEvE,yFAAyF;QACzF,iFAAiF;QACjF,iFAAiF;QACjF,iDAAiD;QACjD,YAAO,GAAG,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAE3D,oFAAoF;QACpF,YAAO,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAElE,CAAC;IAAD,iBAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,UAAU;IADtB,iBAAU,EAAE;GACA,UAAU,CAyBtB;AAzBY,gCAAU;AA4BvB,IAAa,cAAc;IAA3B;IAOA,CAAC;IANQ,sBAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,gBAAc;YACxB,SAAS,EAAE,CAAC,UAAU,CAAC;SACxB,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC,AAPD,IAOC;AAPY,cAAc;IAD1B,eAAQ,CAAC,EAAE,CAAC;GACA,cAAc,CAO1B;AAPY,wCAAc","sourcesContent":["import {Injectable, NgModule, ModuleWithProviders} from '@angular/core';\n\ndeclare const window: any;\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nconst hasV8BreakIterator = (window.Intl && (window.Intl as any).v8BreakIterator);\n\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\n@Injectable()\nexport class MdPlatform {\n\n  /** Layout Engines */\n  EDGE = /(edge)/i.test(navigator.userAgent);\n  TRIDENT = /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to excluded from this check.\n  BLINK = !!(window.chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT;\n\n  // Webkit is part of the userAgent in EdgeHTML Blink and Trident, so we need to\n  // ensure that Webkit runs standalone and is not use as another engines base.\n  WEBKIT = /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n\n  /** Browsers and Platform Types */\n  IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  FIREFOX = /(firefox|minefield)/i.test(navigator.userAgent);\n\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n}\n\n@NgModule({})\nexport class PlatformModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PlatformModule,\n      providers: [MdPlatform],\n    };\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}